{"version":3,"sources":["components/ResultBox.js","components/SelectHTMLProperty.js","components/HTMLPropertyList.js","components/SelectTagList.js","components/ElementList.js","components/SelectCSSPropertyList.js","components/CSSPropertyList.js","dto/TagData.js","dto/PropertyData.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["ResultBox","_ref","tagData","React","createElement","className","style","marginTop","minHeight","dangerouslySetInnerHTML","__html","getResult","current","result","DFS","target","tag","htmlProperty","cssProperty","concat","Object","entries","forEach","_ref2","key","value","keys","length","_ref3","content","children","child","i","depth","whiteSpace","getTagResult","console","log","repeat","_ref4","_ref5","SelectHTMLProperty","onTagSelect","properties","map","property","index","onClick","handleTagClick","data-bs-dismiss","aria-label","HTMLPropertyList","selectedElement","updateHTMLProperties","selectedIndex","getData","height","id","padding","disabled","placeholder","onChange","event","Set","add","Array","from","getpropertys","marginLeft","role","width","data-bs-toggle","data-bs-target","tabIndex","aria-hidden","type","SelectTagList","TagType","tagType","ElementList","tagList","AddTagData","removeTagData","setSelectedIndex","item","SelectCSSProperty","CSSPropertyList","updateCSSProperties","getInputClassName","getInputType","getOptions","getPropertyList","defaultProperties","option","SelectCSSPropertyList","TagData","constructor","parent","this","PropertyData","added","Main","useRef","endIndex","setTagList","useState","setSelectedElement","useEffect","updateTagList","push","JSON","parse","stringify","addTagData","indexToRemove","filter","App","BrowserRouter","basename","process","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.9afe7bc1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ResultBox = ({ tagData }) => {\r\n  const getResult = () => {\r\n    if (tagData.current == null) return null;\r\n\r\n    // 결과를 저장할 변수\r\n    let result = '';\r\n\r\n    const DFS = (target) => {\r\n      const tag = tagData.current[target].tag;\r\n      const htmlProperty = tagData.current[target].htmlProperty;\r\n      const cssProperty = tagData.current[target].cssProperty;\r\n      // 각 태그와 속성에 맞게 HTML 코드 추가\r\n      result += `<${tag}`;\r\n      // HTML 속성 추가\r\n      Object.entries(htmlProperty).forEach(([key, value]) => {\r\n        if(key!=\"content\") result += ` ${key}=\"${value.value}\"`;\r\n      });\r\n      // CSS 속성 추가\r\n      if(!(Object.keys(cssProperty).length===0)) { \r\n        result += ` style=\"`;\r\n        Object.entries(cssProperty).forEach(([key, value]) => {\r\n          if(value) result += `${key}:${value.value};`;\r\n        });\r\n        result += `\">${(htmlProperty.content)?htmlProperty.content.value:''}`;\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        result += `</${tag}>`; // 태그 닫기\r\n      } else {\r\n        result += `>${(htmlProperty.content)?htmlProperty.content.value:''}`\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        result += `</${tag}>`; // 태그 닫기\r\n      }\r\n    }\r\n    for(const i in tagData.current) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getTagResult = () => {\r\n    console.log(tagData);\r\n    if (tagData.current == null) return null;\r\n\r\n    // 결과를 저장할 변수\r\n    let result = '';\r\n\r\n    const DFS = (target) => {\r\n      const tag = tagData.current[target].tag;\r\n      const htmlProperty = tagData.current[target].htmlProperty;\r\n      const cssProperty = tagData.current[target].cssProperty;\r\n      const depth = tagData.current[target].depth;\r\n      // 각 태그와 속성에 맞게 HTML 코드 추가\r\n      if(depth>0){\r\n        result += \"  \".repeat(depth);\r\n      }\r\n      result += `<${tag}`;\r\n      // HTML 속성 추가\r\n      Object.entries(htmlProperty).forEach(([key, value]) => {\r\n        if(key!=\"content\") result += ` ${key}=\"${value.value}\"`;\r\n      });\r\n      // CSS 속성 추가\r\n      if(!(Object.keys(cssProperty).length===0)) { \r\n        result += ` style=\"`;\r\n        Object.entries(cssProperty).forEach(([key, value]) => {\r\n          if(value) result += `${key}:${value.value};`;\r\n        });\r\n        result += `\">\\n${(htmlProperty.content)?\"  \".repeat(depth+1)+htmlProperty.content.value+'\\n':''}`;\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        if(depth>0){\r\n          result += \"  \".repeat(depth);\r\n        }\r\n        result += `</${tag}>\\n`; // 태그 닫기\r\n      } else {\r\n        result += `>\\n${(htmlProperty.content)?\"  \".repeat(depth+1)+htmlProperty.content.value+'\\n':''}`\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        if(depth>0){\r\n          result += \"  \".repeat(depth);\r\n        }\r\n        result += `</${tag}>\\n`; // 태그 닫기\r\n      }\r\n    }\r\n    for(const i in tagData.current) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ marginTop: 20, minHeight: \"150px\"}}>\r\n      <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: getResult() }} />\r\n      <div className=\"card-footer text-body-secondary\" style={{ minHeight: \"40px\", whiteSpace:\"pre\"}}>\r\n        {getTagResult()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultBox;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectHTMLProperty = ({ onTagSelect }) => {\r\n  const handleTagClick = (property) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(property);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {properties.map((property, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(property)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {property}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectHTMLProperty;\r\n\r\nconst properties = [\r\n    \"name\", \"charset\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SelectHTMLProperty from './SelectHTMLProperty';\r\n\r\nconst HTMLPropertyList = ({ selectedElement, updateHTMLProperties, selectedIndex }) => {\r\n  const getData = (property) => {\r\n    if (selectedIndex == null) return null;\r\n    if (selectedElement == null) return null;\r\n    if (!(\"htmlProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.htmlProperty) return selectedElement.htmlProperty[property].value;\r\n    return null;\r\n  }\r\n\r\n  const getpropertys = (selectedElement) => {\r\n    let result = new Set();\r\n    if (selectedElement == null) return [];\r\n    switch (selectedElement.tag) {\r\n      case 'a': result = new Set([\"href\", \"target\"]); break;\r\n      default: result = new Set();\r\n    }\r\n    if(selectedElement && selectedElement.htmlProperty) {\r\n      Object.keys(selectedElement.htmlProperty).map((property) => (\r\n        (property===\"content\")?null:result.add(property)\r\n      ))\r\n    }\r\n    return Array.from(result);\r\n  }\r\n\r\n  const handlePropertyAdd = (property) => {\r\n    updateHTMLProperties(selectedIndex, property, null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20 }}>\r\n      <div className=\"card-header\" id={selectedIndex}>\r\n        <b>HTML PROPERTY</b>\r\n      </div>\r\n      <div className=\"card-body list-group list-group-flush overflow-auto\" style={{padding:0}}>\r\n          <li className=\"list-group-item list-group-item-secondary\" key=\"-1\">\r\n            <input\r\n              className=\"form-control form-control-sm\"\r\n              disabled={(selectedElement)?false:true}\r\n              placeholder=\"content\"\r\n              onChange={(event) => updateHTMLProperties(selectedIndex, \"content\", event.target.value )}\r\n              value={getData(\"content\") || ''}\r\n            />\r\n          </li>\r\n          {getpropertys(selectedElement).map((property, index) => (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n              {property}:\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                disabled={(selectedElement)?false:true}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateHTMLProperties(selectedIndex, { [property.value]: event.target.value })}\r\n                value={getData(property) || ''}\r\n              />\r\n            </li>\r\n          ))}\r\n        \r\n      </div>\r\n      <div className=\"card-footer\" style={{padding:0}}>\r\n        <div className=\"btn-group\" role=\"group\" style={{width:'100%'}}> \r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addHTMLProperty\"\r\n            style={{ width: '100%', padding:10}}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add HTML property\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addHTMLProperty\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Add HTML Property</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectHTMLProperty onTagSelect={handlePropertyAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default HTMLPropertyList;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectTagList = ({ onTagSelect }) => {\r\n  const handleTagClick = (tagType) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(tagType);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {TagType.map((tagType, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(tagType)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {tagType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectTagList;\r\n\r\nconst TagType = [\r\n    \"div\", \"section\", \"article\", \"nav\", \"span\", \"p\", \"a\", \"br\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\nimport SelectTagList from './SelectTagList';\r\nimport { Block } from '@mui/icons-material';\r\n\r\nconst ElementList = ({ tagData, tagList, AddTagData, removeTagData, selectedIndex, setSelectedIndex }) => {\r\n\r\n  const handleTagDataSelect = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleTagAdd = (tagType) => {\r\n    AddTagData(tagType, -1);\r\n  }\r\n\r\n  const handleSubTagAdd = (tagType) => {\r\n    AddTagData(tagType, selectedIndex);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\"style={{ height: '280px', marginTop: 20}}>\r\n      <div className=\"card-header\">\r\n        <b>ELEMENT</b>\r\n      </div>\r\n      <div className='card-body overflow-auto' style={{padding:0}}>\r\n      <div className=\"card-group list-group list-group-flush overflow-auto\">\r\n        {tagList.map((item) => (\r\n          <button\r\n            className={`list-group-item list-group-item-action d-flex justify-content-between align-items-center ${selectedIndex === item ? 'active' : ''}`}\r\n            key={item}\r\n            onClick={() => handleTagDataSelect(item)}\r\n          >\r\n            {\"└\".repeat(tagData.current[item].depth)} {tagData.current[item].tag}\r\n            <div\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => removeTagData(item)}\r\n            >\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      </div>\r\n      <div className=\"card-footer\" style={{padding:0}}>\r\n        <div className=\"btn-group\" role=\"group\" style={{width:'100%'}}> \r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addTag\"\r\n            style={{ width: '100%', padding:10}}\r\n          >\r\n            Add Tag\r\n          </button>\r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addSubTag\"\r\n            style={{ width: '100%', padding:10}}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add Sub Tag\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"modal fade\"\r\n          id=\"addTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addSubTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleSubTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ElementList;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectCSSProperty = ({ onTagSelect }) => {\r\n  const handleTagClick = (property) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(property);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {properties.map((property, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(property)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {property}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectCSSProperty;\r\n\r\nconst properties = [\"position\", \"float\", \"clear\", \"border-radius\", \"box-shadow\", \"transition\", \"flex\"]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SelectCSSPropertyList from './SelectCSSPropertyList';\r\n\r\nconst CSSPropertyList = ({ selectedElement, updateCSSProperties, selectedIndex }) => {\r\n  const getData = (property) => {\r\n    if (selectedIndex == null) return null;\r\n    if (selectedElement == null) return null;\r\n    if (!(\"cssProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.cssProperty) return selectedElement.cssProperty[property].value;\r\n    return null;\r\n  }\r\n\r\n  const getInputClassName = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"form-control form-control-color\";\r\n      default: return \"form-control form-control-sm\";\r\n    }\r\n  }\r\n\r\n  const getInputType = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"color\";\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  const getOptions = (property) => {\r\n    switch (property) {\r\n      case \"display\": return [null, \"none\", \"block\", \"inline\", \"inline-block\"];\r\n      case \"text-align\": return [null, \"left\", \"right\", \"center\", \"justify\"];\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  const handlePropertyAdd = (property) => {\r\n    updateCSSProperties(selectedIndex, property, null);\r\n  }\r\n\r\n  const getPropertyList = () => {\r\n    let result = new Set(defaultProperties);\r\n    if(selectedElement && selectedElement.cssProperty) {\r\n      Object.keys(selectedElement.cssProperty).map((property) => (\r\n        result.add(property)\r\n      ))\r\n    }\r\n    return Array.from(result);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20 }}>\r\n      <div className=\"card-header\">\r\n        <b>CSS PROPERTY</b>\r\n      </div>\r\n      <div className=\"list-group list-group-flush overflow-auto\">\r\n        {getPropertyList().map((property, index) => (\r\n          <li\r\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            key={index}\r\n            style={{ whiteSpace: 'nowrap' }}>\r\n            {property}:\r\n            {(getOptions(property)) ? (\r\n              <select\r\n                className=\"form-select form-select-sm\"\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, property, event.target.value)}\r\n                value={getData(property) || ''}\r\n              >\r\n                {getOptions(property).map((option, index) => (\r\n                  <option value={option} key={index}>{option}</option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <input\r\n                className={getInputClassName(property)}\r\n                type={getInputType(property)}\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, property, event.target.value)}\r\n                value={getData(property) || ''}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </div>\r\n      <div className=\"card-footer\" style={{ padding: 0 }}>\r\n        <div className=\"btn-group\" role=\"group\" style={{ width: '100%' }}>\r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addCSSProperty\"\r\n            style={{ width: '100%', padding: 10 }}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add CSS property\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addCSSProperty\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Add CSS Property</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectCSSPropertyList onTagSelect={handlePropertyAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CSSPropertyList;\r\n\r\nconst defaultProperties = [\"color\", \"font-size\", \"font-family\", \"margin\", \"padding\", \"border\", \"background-color\", \"text-align\", \"display\", \"width\", \"height\"]\r\n// const propertys = [\"font-size\", \"font-weight\", \"color\", \"letter-spacing\", \"display\", \"border\"];","export default class TagData {\r\n    constructor(tagType, depth, parent) {\r\n        this.tag = tagType;\r\n        this.htmlProperty = {};\r\n        this.cssProperty = {};\r\n        this.depth = depth;\r\n        this.children = [];\r\n        this.parent = parent;\r\n    }\r\n}","export default class PropertyData {\r\n    constructor(value, added) {\r\n        this.value = value;\r\n        this.added = added;\r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ResultBox from './components/ResultBox';\r\nimport HTMLPropertyList from './components/HTMLPropertyList';\r\nimport ElementList from './components/ElementList';\r\nimport CSSPropertyList from './components/CSSPropertyList';\r\nimport TagData from './dto/TagData';\r\nimport PropertyData from './dto/PropertyData';\r\n\r\nconst Main = () => {\r\n  let tagData = useRef({});\r\n  let endIndex = useRef(0); \r\n  const [tagList, setTagList] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n  useEffect(() => {\r\n  }, [tagList, selectedIndex, selectedElement]);\r\n\r\n  const updateSeletedIndex = (index) => {\r\n    setSelectedIndex(index);\r\n    setSelectedElement(tagData.current[index]);\r\n  }\r\n\r\n  const updateHTMLProperties = (index, type, value) => {\r\n    if (!tagData.current[index].htmlProperty[type]){\r\n      tagData.current[index].htmlProperty[type] = new PropertyData(value, 0);\r\n    }\r\n    tagData.current[index].htmlProperty[type].value = value;\r\n    setSelectedElement(JSON.parse(JSON.stringify(tagData.current[index])));\r\n  };\r\n  \r\n  const updateCSSProperties = (index, type, value) => {\r\n    if (!tagData.current[index].cssProperty[type]){\r\n      tagData.current[index].cssProperty[type] = new PropertyData(value, 0);\r\n    }\r\n    tagData.current[index].cssProperty[type].value = value;\r\n    setSelectedElement(JSON.parse(JSON.stringify(tagData.current[index])));\r\n  };\r\n\r\n  const addTagData = (tagType, index) => {\r\n    if(index === -1) {\r\n      tagData.current[endIndex.current++] = new TagData(tagType, 0, -1);\r\n    } else {\r\n      tagData.current[index].children.push(endIndex.current);\r\n      tagData.current[endIndex.current++] = new TagData(tagType, tagData.current[index].depth+1, index);\r\n    }\r\n    updateTagList();\r\n  }\r\n\r\n  const removeTagData = (indexToRemove) => {\r\n    if(indexToRemove===selectedIndex){\r\n      setSelectedElement(null);\r\n      setSelectedIndex(null);\r\n    }\r\n    const DFS = (target) => {\r\n      if (tagData.current[target] && tagData.current[target].children) {\r\n        for (const child of tagData.current[target].children) DFS(child);\r\n      }\r\n      delete tagData.current[target];\r\n    }\r\n    if(tagData.current[indexToRemove].parent !== -1) {\r\n      tagData.current[tagData.current[indexToRemove].parent].children\r\n        = tagData.current[tagData.current[indexToRemove].parent].children.filter((value) => value !== indexToRemove);\r\n    }\r\n    DFS(indexToRemove)\r\n    updateTagList();\r\n  };\r\n\r\n  const updateTagList = () => {\r\n    let result = [];\r\n    const DFS = (target) => {\r\n      result.push(target)\r\n      if (tagData.current[target] && tagData.current[target].children) {\r\n        for (const child of tagData.current[target].children) DFS(child);\r\n      }\r\n    }\r\n    for(const i in tagData.current) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    setTagList(result);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ResultBox \r\n        tagData={tagData}\r\n      />\r\n      <div className=\"row h-50\">\r\n        <div className=\"col\">\r\n          <HTMLPropertyList\r\n            selectedElement={selectedElement}\r\n            updateHTMLProperties={updateHTMLProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <CSSPropertyList\r\n            selectedElement={selectedElement}\r\n            updateCSSProperties={updateCSSProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <ElementList\r\n            tagData={tagData}\r\n            tagList={tagList}\r\n            AddTagData={addTagData}\r\n            removeTagData={removeTagData}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={updateSeletedIndex} />\r\n        </div>\r\n      </div>\r\n      <footer className=\"py-3 mt-auto\"></footer>\r\n    </div>\r\n  )\r\n}\r\nexport default Main;","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Main />}\n          />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}