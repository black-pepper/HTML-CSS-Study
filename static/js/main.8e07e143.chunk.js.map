{"version":3,"sources":["components/ResultBox.js","components/SelectHTMLProperty.js","components/HTMLPropertyList.js","components/SelectTagList.js","components/ElementList.js","components/SelectCSSPropertyList.js","components/CSSPropertyList.js","dto/TagData.js","dto/PropertyData.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["ResultBox","_ref","tagData","getResult","current","result","DFS","target","tag","htmlProperty","cssProperty","concat","Object","entries","forEach","_ref2","key","value","keys","length","_ref3","content","children","child","i","depth","React","createElement","className","style","marginTop","minHeight","dangerouslySetInnerHTML","__html","whiteSpace","getTagResult","repeat","_ref4","_ref5","type","onClick","openResultWindow","resultHTML","resultWindow","window","open","document","write","close","SelectHTMLProperty","onTagSelect","properties","map","property","index","handleTagClick","data-bs-dismiss","aria-label","HTMLPropertyList","selectedElement","updateHTMLProperties","selectedIndex","getData","height","id","padding","disabled","placeholder","onChange","event","Set","add","Array","from","getpropertys","marginLeft","role","width","data-bs-toggle","data-bs-target","tabIndex","aria-hidden","SelectTagList","TagType","tagType","ElementList","tagList","AddTagData","removeTagData","setSelectedIndex","item","SelectCSSProperty","CSSPropertyList","updateCSSProperties","getInputClassName","getInputType","getOptions","getPropertyList","defaultProperties","option","SelectCSSPropertyList","TagData","constructor","parent","this","PropertyData","added","Main","useRef","endIndex","setTagList","useState","setSelectedElement","useEffect","storedData","JSON","parse","localStorage","getItem","storedEndIndex","updateSeletedIndex","updateTagList","console","log","setItem","stringify","push","handleClearClick","clear","addTagData","indexToRemove","filter","App","BrowserRouter","basename","process","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.8e07e143.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ResultBox = ({ tagData }) => {\r\n  const getResult = () => {\r\n    if (tagData.current == null) return null;\r\n\r\n    // 결과를 저장할 변수\r\n    let result = '';\r\n\r\n    const DFS = (target) => {\r\n      const tag = tagData.current[target].tag;\r\n      const htmlProperty = tagData.current[target].htmlProperty;\r\n      const cssProperty = tagData.current[target].cssProperty;\r\n      // 각 태그와 속성에 맞게 HTML 코드 추가\r\n      result += `<${tag}`;\r\n      // HTML 속성 추가\r\n      Object.entries(htmlProperty).forEach(([key, value]) => {\r\n        if(key!=\"content\") result += ` ${key}=\"${value.value}\"`;\r\n      });\r\n      // CSS 속성 추가\r\n      if(!(Object.keys(cssProperty).length===0)) { \r\n        result += ` style=\"`;\r\n        Object.entries(cssProperty).forEach(([key, value]) => {\r\n          if(value) result += `${key}:${value.value};`;\r\n        });\r\n        result += `\">${(htmlProperty.content)?htmlProperty.content.value:''}`;\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        result += `</${tag}>`; // 태그 닫기\r\n      } else {\r\n        result += `>${(htmlProperty.content)?htmlProperty.content.value:''}`\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        result += `</${tag}>`; // 태그 닫기\r\n      }\r\n    }\r\n    for(const i in tagData.current) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getTagResult = () => {\r\n    if (tagData.current == null) return null;\r\n\r\n    // 결과를 저장할 변수\r\n    let result = '';\r\n\r\n    const DFS = (target) => {\r\n      const tag = tagData.current[target].tag;\r\n      const htmlProperty = tagData.current[target].htmlProperty;\r\n      const cssProperty = tagData.current[target].cssProperty;\r\n      const depth = tagData.current[target].depth;\r\n      // 각 태그와 속성에 맞게 HTML 코드 추가\r\n      if(depth>0){\r\n        result += \"  \".repeat(depth);\r\n      }\r\n      result += `<${tag}`;\r\n      // HTML 속성 추가\r\n      Object.entries(htmlProperty).forEach(([key, value]) => {\r\n        if(key!=\"content\") result += ` ${key}=\"${value.value}\"`;\r\n      });\r\n      // CSS 속성 추가\r\n      if(!(Object.keys(cssProperty).length===0)) { \r\n        result += ` style=\"`;\r\n        Object.entries(cssProperty).forEach(([key, value]) => {\r\n          if(value) result += `${key}:${value.value};`;\r\n        });\r\n        result += `\">\\n${(htmlProperty.content)?\"  \".repeat(depth+1)+htmlProperty.content.value+'\\n':''}`;\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        if(depth>0){\r\n          result += \"  \".repeat(depth);\r\n        }\r\n        result += `</${tag}>\\n`; // 태그 닫기\r\n      } else {\r\n        result += `>\\n${(htmlProperty.content)?\"  \".repeat(depth+1)+htmlProperty.content.value+'\\n':''}`\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        if(depth>0){\r\n          result += \"  \".repeat(depth);\r\n        }\r\n        result += `</${tag}>\\n`; // 태그 닫기\r\n      }\r\n    }\r\n    for(const i in tagData.current) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const openResultWindow = () => {\r\n    // 결과를 보여줄 HTML 코드를 작성합니다.\r\n    const resultHTML = getResult();\r\n  \r\n    // 새 창을 엽니다.\r\n    const resultWindow = window.open(\"\", \"_blank\");\r\n  \r\n    // 새 창에 HTML을 쓰고 닫힘 이벤트를 처리합니다.\r\n    resultWindow.document.write(resultHTML);\r\n    resultWindow.document.close();\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"card\" style={{ marginTop: 10, minHeight: \"150px\"}}>\r\n      <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: getResult() }} />\r\n      <div className=\"card-footer text-body-secondary\" style={{ minHeight: \"40px\", whiteSpace:\"pre\"}}>\r\n        {getTagResult()}\r\n        <div className='text-end'>\r\n          <button\r\n            style={{marginTop:10}}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={openResultWindow}\r\n          >\r\n            SHOW NEW WINDOW\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultBox;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectHTMLProperty = ({ onTagSelect }) => {\r\n  const handleTagClick = (property) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(property);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {properties.map((property, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(property)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {property}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectHTMLProperty;\r\n\r\nconst properties = [\r\n    \"name\", \"charset\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SelectHTMLProperty from './SelectHTMLProperty';\r\n\r\nconst HTMLPropertyList = ({ selectedElement, updateHTMLProperties, selectedIndex }) => {\r\n  const getData = (property) => {\r\n    if (selectedIndex == null) return null;\r\n    if (selectedElement == null) return null;\r\n    if (!(\"htmlProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.htmlProperty) return selectedElement.htmlProperty[property].value;\r\n    return null;\r\n  }\r\n\r\n  const getpropertys = (selectedElement) => {\r\n    let result = new Set();\r\n    if (selectedElement == null) return [];\r\n    switch (selectedElement.tag) {\r\n      case 'a': result = new Set([\"href\", \"target\"]); break;\r\n      default: result = new Set();\r\n    }\r\n    if(selectedElement && selectedElement.htmlProperty) {\r\n      Object.keys(selectedElement.htmlProperty).map((property) => (\r\n        (property===\"content\")?null:result.add(property)\r\n      ))\r\n    }\r\n    return Array.from(result);\r\n  }\r\n\r\n  const handlePropertyAdd = (property) => {\r\n    updateHTMLProperties(selectedIndex, property, null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20 }}>\r\n      <div className=\"card-header\" id={selectedIndex}>\r\n        <b>HTML PROPERTY</b>\r\n      </div>\r\n      <div className=\"card-body list-group list-group-flush overflow-auto\" style={{padding:0}}>\r\n          <li className=\"list-group-item list-group-item-secondary\" key=\"-1\">\r\n            <input\r\n              className=\"form-control form-control-sm\"\r\n              disabled={(selectedElement)?false:true}\r\n              placeholder=\"content\"\r\n              onChange={(event) => updateHTMLProperties(selectedIndex, \"content\", event.target.value )}\r\n              value={getData(\"content\") || ''}\r\n            />\r\n          </li>\r\n          {getpropertys(selectedElement).map((property, index) => (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n              {property}:\r\n              <input\r\n                className=\"form-control form-control-sm\"\r\n                disabled={(selectedElement)?false:true}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateHTMLProperties(selectedIndex, { [property.value]: event.target.value })}\r\n                value={getData(property) || ''}\r\n              />\r\n            </li>\r\n          ))}\r\n        \r\n      </div>\r\n      <div className=\"card-footer\" style={{padding:0}}>\r\n        <div className=\"btn-group\" role=\"group\" style={{width:'100%'}}> \r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addHTMLProperty\"\r\n            style={{ width: '100%', padding:10}}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add HTML property\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addHTMLProperty\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Add HTML Property</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectHTMLProperty onTagSelect={handlePropertyAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default HTMLPropertyList;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectTagList = ({ onTagSelect }) => {\r\n  const handleTagClick = (tagType) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(tagType);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {TagType.map((tagType, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(tagType)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {tagType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectTagList;\r\n\r\nconst TagType = [\r\n    \"div\", \"section\", \"article\", \"nav\", \"span\", \"p\", \"a\", \"br\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\nimport SelectTagList from './SelectTagList';\r\nimport { Block } from '@mui/icons-material';\r\n\r\nconst ElementList = ({ tagData, tagList, AddTagData, removeTagData, selectedIndex, setSelectedIndex }) => {\r\n\r\n  const handleTagDataSelect = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleTagAdd = (tagType) => {\r\n    AddTagData(tagType, -1);\r\n  }\r\n\r\n  const handleSubTagAdd = (tagType) => {\r\n    AddTagData(tagType, selectedIndex);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\"style={{ height: '280px', marginTop: 20}}>\r\n      <div className=\"card-header\">\r\n        <b>ELEMENT</b>\r\n      </div>\r\n      <div className='card-body overflow-auto' style={{padding:0}}>\r\n      <div className=\"card-group list-group list-group-flush overflow-auto\">\r\n        {tagList.map((item) => (\r\n          <button\r\n            className={`list-group-item list-group-item-action d-flex justify-content-between align-items-center ${selectedIndex === item ? 'active' : ''}`}\r\n            key={item}\r\n            onClick={() => handleTagDataSelect(item)}\r\n          >\r\n            {\"└\".repeat(tagData.current[item].depth)} {tagData.current[item].tag}\r\n            <div\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => removeTagData(item)}\r\n            >\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      </div>\r\n      <div className=\"card-footer\" style={{padding:0}}>\r\n        <div className=\"btn-group\" role=\"group\" style={{width:'100%'}}> \r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addTag\"\r\n            style={{ width: '100%', padding:10}}\r\n          >\r\n            Add Tag\r\n          </button>\r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addSubTag\"\r\n            style={{ width: '100%', padding:10}}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add Sub Tag\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"modal fade\"\r\n          id=\"addTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addSubTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleSubTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ElementList;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectCSSProperty = ({ onTagSelect }) => {\r\n  const handleTagClick = (property) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(property);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {properties.map((property, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(property)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {property}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectCSSProperty;\r\n\r\nconst properties = [\"position\", \"float\", \"clear\", \"border-radius\", \"box-shadow\", \"transition\", \"flex\"]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SelectCSSPropertyList from './SelectCSSPropertyList';\r\n\r\nconst CSSPropertyList = ({ selectedElement, updateCSSProperties, selectedIndex }) => {\r\n  const getData = (property) => {\r\n    if (selectedIndex == null) return null;\r\n    if (selectedElement == null) return null;\r\n    if (!(\"cssProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.cssProperty) return selectedElement.cssProperty[property].value;\r\n    return null;\r\n  }\r\n\r\n  const getInputClassName = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"form-control form-control-color\";\r\n      default: return \"form-control form-control-sm\";\r\n    }\r\n  }\r\n\r\n  const getInputType = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"color\";\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  const getOptions = (property) => {\r\n    switch (property) {\r\n      case \"display\": return [null, \"none\", \"block\", \"inline\", \"inline-block\"];\r\n      case \"text-align\": return [null, \"left\", \"right\", \"center\", \"justify\"];\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  const handlePropertyAdd = (property) => {\r\n    updateCSSProperties(selectedIndex, property, null);\r\n  }\r\n\r\n  const getPropertyList = () => {\r\n    let result = new Set(defaultProperties);\r\n    if(selectedElement && selectedElement.cssProperty) {\r\n      Object.keys(selectedElement.cssProperty).map((property) => (\r\n        result.add(property)\r\n      ))\r\n    }\r\n    return Array.from(result);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20 }}>\r\n      <div className=\"card-header\">\r\n        <b>CSS PROPERTY</b>\r\n      </div>\r\n      <div className=\"list-group list-group-flush overflow-auto\">\r\n        {getPropertyList().map((property, index) => (\r\n          <li\r\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n            key={index}\r\n            style={{ whiteSpace: 'nowrap' }}>\r\n            {property}:\r\n            {(getOptions(property)) ? (\r\n              <select\r\n                className=\"form-select form-select-sm\"\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, property, event.target.value)}\r\n                value={getData(property) || ''}\r\n              >\r\n                {getOptions(property).map((option, index) => (\r\n                  <option value={option} key={index}>{option}</option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <input\r\n                className={getInputClassName(property)}\r\n                type={getInputType(property)}\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, property, event.target.value)}\r\n                value={getData(property) || ''}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </div>\r\n      <div className=\"card-footer\" style={{ padding: 0 }}>\r\n        <div className=\"btn-group\" role=\"group\" style={{ width: '100%' }}>\r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addCSSProperty\"\r\n            style={{ width: '100%', padding: 10 }}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add CSS property\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addCSSProperty\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Add CSS Property</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectCSSPropertyList onTagSelect={handlePropertyAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CSSPropertyList;\r\n\r\nconst defaultProperties = [\"color\", \"font-size\", \"font-family\", \"margin\", \"padding\", \"border\", \"background-color\", \"text-align\", \"display\", \"width\", \"height\"]\r\n// const propertys = [\"font-size\", \"font-weight\", \"color\", \"letter-spacing\", \"display\", \"border\"];","export default class TagData {\r\n    constructor(tagType, depth, parent) {\r\n        this.tag = tagType;\r\n        this.htmlProperty = {};\r\n        this.cssProperty = {};\r\n        this.depth = depth;\r\n        this.children = [];\r\n        this.parent = parent;\r\n    }\r\n}","export default class PropertyData {\r\n    constructor(value, added) {\r\n        this.value = value;\r\n        this.added = added;\r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ResultBox from './components/ResultBox';\r\nimport HTMLPropertyList from './components/HTMLPropertyList';\r\nimport ElementList from './components/ElementList';\r\nimport CSSPropertyList from './components/CSSPropertyList';\r\nimport TagData from './dto/TagData';\r\nimport PropertyData from './dto/PropertyData';\r\n\r\nconst Main = () => {\r\n  let tagData = useRef({});\r\n  let endIndex = useRef(0); \r\n  const [tagList, setTagList] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n  useEffect(() => {\r\n  }, [tagList, selectedIndex, selectedElement]);\r\n\r\n  useEffect(() => {\r\n    // 로컬 스토리지에서 데이터를 가져와서 상태에 설정\r\n    const storedData = JSON.parse(localStorage.getItem('tagData'));\r\n    const storedEndIndex = JSON.parse(localStorage.getItem('endIndex'))\r\n    if (storedData) {\r\n      tagData.current = storedData;\r\n      endIndex.current = storedEndIndex;\r\n      updateSeletedIndex(null);\r\n      updateTagList();\r\n      console.log(\"use effect 실행\", storedData);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tagData', JSON.stringify(tagData.current));\r\n    localStorage.setItem('endIndex', JSON.stringify(endIndex.current));\r\n  }, [selectedElement]);\r\n\r\n  const updateSeletedIndex = (index) => {\r\n    if(index===null) {\r\n      setSelectedIndex(null);\r\n      setSelectedElement(null);\r\n    } else {\r\n      setSelectedIndex(index);\r\n      setSelectedElement(tagData.current[index]);\r\n    }\r\n  }\r\n\r\n  const updateHTMLProperties = (index, type, value) => {\r\n    if (!tagData.current[index].htmlProperty[type]){\r\n      tagData.current[index].htmlProperty[type] = new PropertyData(value, 0);\r\n    }\r\n    tagData.current[index].htmlProperty[type].value = value;\r\n    setSelectedElement(JSON.parse(JSON.stringify(tagData.current[index])));\r\n  };\r\n  \r\n  const updateCSSProperties = (index, type, value) => {\r\n    if (!tagData.current[index].cssProperty[type]){\r\n      tagData.current[index].cssProperty[type] = new PropertyData(value, 0);\r\n    }\r\n    tagData.current[index].cssProperty[type].value = value;\r\n    setSelectedElement(JSON.parse(JSON.stringify(tagData.current[index])));\r\n  };\r\n\r\n  const addTagData = (tagType, index) => {\r\n    if(index === -1) {\r\n      tagData.current[endIndex.current++] = new TagData(tagType, 0, -1);\r\n    } else {\r\n      tagData.current[index].children.push(endIndex.current);\r\n      tagData.current[endIndex.current++] = new TagData(tagType, tagData.current[index].depth+1, index);\r\n    }\r\n    updateTagList();\r\n  }\r\n\r\n  const removeTagData = (indexToRemove) => {\r\n    if(indexToRemove===selectedIndex){\r\n      setSelectedElement(null);\r\n      setSelectedIndex(null);\r\n    }\r\n    const DFS = (target) => {\r\n      if (tagData.current[target] && tagData.current[target].children) {\r\n        for (const child of tagData.current[target].children) DFS(child);\r\n      }\r\n      delete tagData.current[target];\r\n    }\r\n    if(tagData.current[indexToRemove].parent !== -1) {\r\n      tagData.current[tagData.current[indexToRemove].parent].children\r\n        = tagData.current[tagData.current[indexToRemove].parent].children.filter((value) => value !== indexToRemove);\r\n    }\r\n    DFS(indexToRemove)\r\n    updateTagList();\r\n  };\r\n\r\n  const updateTagList = () => {\r\n    let result = [];\r\n    const DFS = (target) => {\r\n      result.push(target)\r\n      if (tagData.current[target] && tagData.current[target].children) {\r\n        for (const child of tagData.current[target].children) DFS(child);\r\n      }\r\n    }\r\n    for(const i in tagData.current) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    setTagList(result);\r\n  }\r\n\r\n  const handleClearClick= () => {\r\n    //스토리지 비우기\r\n    localStorage.clear()\r\n    //리셋\r\n    tagData.current = {};\r\n    endIndex.current = 0; \r\n    setTagList([]);\r\n    setSelectedIndex(null);\r\n    setSelectedElement(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row h-50\">\r\n        <div className=\"col text-end\">\r\n          <button\r\n          style={{marginTop:10}}\r\n          type=\"button\"\r\n          className=\"btn btn-light\"\r\n          onClick={handleClearClick}\r\n          >\r\n            CLEAR\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <ResultBox \r\n        tagData={tagData}\r\n      />\r\n      <div className=\"row h-50\">\r\n        <div className=\"col\">\r\n          <HTMLPropertyList\r\n            selectedElement={selectedElement}\r\n            updateHTMLProperties={updateHTMLProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <CSSPropertyList\r\n            selectedElement={selectedElement}\r\n            updateCSSProperties={updateCSSProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <ElementList\r\n            tagData={tagData}\r\n            tagList={tagList}\r\n            AddTagData={addTagData}\r\n            removeTagData={removeTagData}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={updateSeletedIndex} />\r\n        </div>\r\n      </div>\r\n      <footer className=\"py-3 mt-auto\"></footer>\r\n    </div>\r\n  )\r\n}\r\nexport default Main;","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Main />}\n          />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}