{"version":3,"sources":["components/ResultBox.js","components/HTMLPropertyList.js","components/SelectTagList.js","components/ElementList.js","components/CSSPropertyList.js","dto/TagData.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["ResultBox","_ref","tagData","getResult","current","result","DFS","target","tag","htmlProperty","cssProperty","concat","Object","entries","forEach","_ref2","key","value","keys","length","_ref3","content","children","child","i","depth","React","createElement","className","style","marginTop","dangerouslySetInnerHTML","__html","HTMLPropertyList","selectedElement","updateHTMLProperties","selectedIndex","getData","property","height","id","disabled","placeholder","onChange","event","getpropertys","map","index","marginLeft","SelectTagList","onTagSelect","TagType","tagType","onClick","handleTagClick","data-bs-dismiss","aria-label","ElementList","tagList","AddTagData","removeTagData","setSelectedIndex","padding","item","repeat","type","role","width","data-bs-toggle","data-bs-target","tabIndex","aria-hidden","CSSPropertyList","updateCSSProperties","getInputClassName","getInputType","getOptions","defaultProperties","whiteSpace","option","TagData","constructor","this","Main","useRef","setTagList","useState","setSelectedElement","useEffect","updateTagList","push","JSON","parse","stringify","addTagData","indexToRemove","splice","App","BrowserRouter","basename","process","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"6QAuDeA,MApDGC,IAAkB,IAAjB,QAAEC,GAASD,EAC5B,MAAME,EAAYA,KAChB,GAAuB,MAAnBD,EAAQE,QAAiB,OAAO,KAGpC,IAAIC,EAAS,GAEb,MAAMC,EAAOC,IACX,MAAMC,EAAMN,EAAQE,QAAQG,GAAQC,IAC9BC,EAAeP,EAAQE,QAAQG,GAAQE,aACvCC,EAAcR,EAAQE,QAAQG,GAAQG,YAQ5C,GANAL,GAAM,IAAAM,OAAQH,GAEdI,OAAOC,QAAQJ,GAAcK,QAAQC,IAAmB,IAAjBC,EAAKC,GAAMF,EACxC,WAALC,IAAgBX,GAAM,IAAAM,OAAQK,EAAG,MAAAL,OAAKM,EAAK,QAGT,IAAlCL,OAAOM,KAAKR,GAAaS,OAAa,CAMvC,GALFd,GAAM,WACNO,OAAOC,QAAQH,GAAaI,QAAQM,IAAmB,IAAjBJ,EAAKC,GAAMG,EAC5CH,IAAOZ,GAAM,GAAAM,OAAOK,EAAG,KAAAL,OAAIM,EAAK,QAErCZ,GAAM,KAAAM,OAAUF,EAAaY,QAASZ,EAAaY,QAAQ,IACrDnB,EAAQE,QAAQG,IAAWL,EAAQE,QAAQG,GAAQe,SACrD,IAAK,MAAMC,KAASrB,EAAQE,QAAQG,GAAQe,SAAUhB,EAAIiB,GAE9DlB,GAAM,KAAAM,OAASH,EAAG,SACb,CAEH,GADFH,GAAM,IAAAM,OAASF,EAAaY,QAASZ,EAAaY,QAAQ,IACpDnB,EAAQE,QAAQG,IAAWL,EAAQE,QAAQG,GAAQe,SACrD,IAAK,MAAMC,KAASrB,EAAQE,QAAQG,GAAQe,SAAUhB,EAAIiB,GAE9DlB,GAAM,KAAAM,OAASH,EAAG,OAGtB,IAAI,IAAIgB,EAAE,EAAGA,EAAEtB,EAAQE,QAAQe,OAAQK,IACN,GAA5BtB,EAAQE,QAAQoB,GAAGC,OAAYnB,EAAIkB,GAExC,OAAOnB,GAGT,OACEqB,IAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEC,UAAW,KACxCJ,IAAAC,cAAA,OAAKC,UAAU,YAAYG,wBAAyB,CAAEC,OAAQ7B,OAC9DuB,IAAAC,cAAA,OAAKC,UAAU,mCACZzB,OCEM8B,MAhDUhC,IAA+D,IAA9D,gBAAEiC,EAAe,qBAAEC,EAAoB,cAAEC,GAAenC,EAChF,MAAMoC,EAAWC,GACM,MAAjBF,GACmB,MAAnBF,EAD8B,KAE5B,iBAAkBA,GACpBI,KAAYJ,EAAgBzB,aAAqByB,EAAgBzB,aAAa6B,GADjC,KAanD,OACEZ,IAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEU,OAAQ,QAAST,UAAW,KACzDJ,IAAAC,cAAA,OAAKC,UAAU,cAAcY,GAAIJ,GAC/BV,IAAAC,cAAA,SAAG,kBAELD,IAAAC,cAAA,MAAIC,UAAU,+BACZF,IAAAC,cAAA,MAAIC,UAAU,4CAA4CZ,IAAI,MAC5DU,IAAAC,cAAA,SACEC,UAAU,+BACVa,UAAWP,EACXQ,YAAY,UACZC,SAAWC,GAAUT,EAAqBC,EAAe,UAAWQ,EAAMrC,OAAOU,OACjFA,MAAOoB,EAAQ,YAAc,MApBjBH,KACpB,GAAuB,MAAnBA,EAAyB,MAAO,GACpC,OAAQA,EAAgB1B,KACtB,IAAK,IAAK,MAAO,CAAC,OAAQ,UAC1B,QAAS,MAAO,KAmBbqC,CAAaX,GAAiBY,IAAI,CAACR,EAAUS,IAC5CrB,IAAAC,cAAA,MAAIC,UAAU,oEAAoEZ,IAAK+B,GACpFT,EAAS,IACVZ,IAAAC,cAAA,SACEC,UAAU,+BACVa,UAAWP,EACXL,MAAO,CAAEmB,WAAY,IACrBL,SAAWC,GAAUT,EAAqBC,EAAe,CAAE,CAACE,GAAWM,EAAMrC,OAAOU,QACpFA,MAAOoB,EAAQC,IAAa,U,MClB3BW,MAtBOhD,IAAsB,IAArB,YAAEiD,GAAajD,EAMlC,OACEyB,IAAAC,cAAA,OAAKC,UAAU,cACZuB,EAAQL,IAAI,CAACM,EAASL,IACrBrB,IAAAC,cAAA,UACEC,UAAU,yCACVZ,IAAK+B,EACLM,QAASA,IAXKD,KAEtBF,EAAYE,IASWE,CAAeF,GAC9BG,kBAAgB,QAChBC,aAAW,SAEVJ,MAQb,MAAMD,EAAU,CACZ,MAAO,UAAW,UAAW,MAAO,OAAQ,IAAK,IAAK,MCyF3CM,MA9GKxD,IAAuF,IAAtF,QAAEC,EAAO,QAAEwD,EAAO,WAAEC,EAAU,cAAEC,EAAa,cAAExB,EAAa,iBAAEyB,GAAkB5D,EAcnG,OACEyB,IAAAC,cAAA,OAAKC,UAAU,OAAMC,MAAO,CAAEU,OAAQ,QAAST,UAAW,KACxDJ,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,SAAG,YAELD,IAAAC,cAAA,OAAKC,UAAU,0BAA0BC,MAAO,CAACiC,QAAQ,IACzDpC,IAAAC,cAAA,OAAKC,UAAU,wDACZ8B,EAAQZ,IAAKiB,GACZrC,IAAAC,cAAA,UACEC,UAAS,4FAAAjB,OAA8FyB,IAAkB2B,EAAO,SAAW,IAC3I/C,IAAK+C,EACLV,QAASA,KAtBjBQ,EAsB2CE,KAElC,SAAIC,OAAO9D,EAAQE,QAAQ2D,GAAMtC,OAAO,IAAEvB,EAAQE,QAAQ2D,GAAMvD,IACjEkB,IAAAC,cAAA,OACEsC,KAAK,SACLrC,UAAU,YACV4B,aAAW,QACXH,QAASA,IAAMO,EAAcG,SAOrCrC,IAAAC,cAAA,OAAKC,UAAU,cAAcC,MAAO,CAACiC,QAAQ,IAC3CpC,IAAAC,cAAA,OAAKC,UAAU,YAAYsC,KAAK,QAAQrC,MAAO,CAACsC,MAAM,SACpDzC,IAAAC,cAAA,UACEC,UAAU,oCACVwC,iBAAe,QACfC,iBAAe,UACfxC,MAAO,CAAEsC,MAAO,OAAQL,QAAQ,KACjC,WAGDpC,IAAAC,cAAA,UACEC,UAAU,oCACVwC,iBAAe,QACfC,iBAAe,aACfxC,MAAO,CAAEsC,MAAO,OAAQL,QAAQ,IAChCrB,SAA0B,OAAhBL,GACX,gBAKHV,IAAAC,cAAA,OAAKC,UAAU,aACbY,GAAG,SACH8B,SAAS,KACTC,cAAY,QAEZ7C,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,qBAAoB,cACxDd,IAAAC,cAAA,UACEsC,KAAK,SACLrC,UAAU,YACV2B,kBAAgB,QAChBC,aAAW,WAGf9B,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAACsB,EAAa,CAACC,YAvEPE,IACpBO,EAAWP,GAAU,UA4EjB1B,IAAAC,cAAA,OAAKC,UAAU,aACbY,GAAG,YACH8B,SAAS,KACTC,cAAY,QAEZ7C,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,qBAAoB,cACxDd,IAAAC,cAAA,UACEsC,KAAK,SACLrC,UAAU,YACV2B,kBAAgB,QAChBC,aAAW,WAGf9B,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAACsB,EAAa,CAACC,YA1FJE,IACvBO,EAAWP,EAAShB,aCwDToC,MAvESvE,IAA6D,IAA5D,gBAAEiC,EAAe,oBAAEuC,EAAmB,cAAErC,GAAcnC,EAC7E,MAAMoC,EAAWC,GACI,MAAjBF,GACmB,MAAnBF,EAD8B,KAE1B,gBAAiBA,GACnBI,KAAYJ,EAAgBxB,YAAoBwB,EAAgBxB,YAAY4B,GADhC,KAK5CoC,EAAqBpC,IACzB,OAAQA,GACN,IAAK,QAAS,IAAK,mBAAoB,MAAO,kCAC9C,QAAS,MAAO,iCAIdqC,EAAgBrC,IACpB,OAAQA,GACN,IAAK,QAAS,IAAK,mBAAoB,MAAO,QAC9C,QAAS,OAAO,OAIdsC,EAActC,IAClB,OAAQA,GACN,IAAK,UAAW,MAAO,CAAC,KAAM,OAAQ,QAAS,SAAU,gBACzD,IAAK,aAAc,MAAO,CAAC,KAAM,OAAQ,QAAS,SAAU,WAC5D,QAAS,OAAO,OAIpB,OACEZ,IAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEU,OAAQ,QAAST,UAAW,KACzDJ,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,SAAG,iBAELD,IAAAC,cAAA,OAAKC,UAAU,6CACZiD,EAAkB/B,IAAI,CAACR,EAAUS,IAChCrB,IAAAC,cAAA,MACEC,UAAU,oEACVZ,IAAK+B,EACLlB,MAAO,CAAEiD,WAAY,WACpBxC,EAAS,IACRsC,EAAWtC,GACXZ,IAAAC,cAAA,UACEC,UAAW,6BACXa,UAAWP,EACXL,MAAO,CAAEmB,WAAY,IACrBL,SAAWC,GAAU6B,EAAoBrC,EAAeE,EAAUM,EAAMrC,OAAOU,OAC/EA,MAAOoB,EAAQC,IAAa,IAE3BsC,EAAWtC,GAAUQ,IAAI,CAACiC,EAAQhC,IACjCrB,IAAAC,cAAA,UAAQV,MAAO8D,EAAQ/D,IAAK+B,GAAQgC,KAIxCrD,IAAAC,cAAA,SACEC,UAAW8C,EAAkBpC,GAC7B2B,KAAMU,EAAarC,GACnBG,UAAWP,EACXL,MAAO,CAAEmB,WAAY,IACrBL,SAAWC,GAAU6B,EAAoBrC,EAAeE,EAAUM,EAAMrC,OAAOU,OAC/EA,MAAOoB,EAAQC,IAAa,UAW5C,MAAMuC,EAAoB,CAAC,QAAS,YAAa,cAAe,SAAU,UAAW,SAAU,mBAAoB,aAAc,UAAW,QAAS,UC5EtI,MAAMG,EACjBC,YAAY7B,EAAS3B,GACjByD,KAAK1E,IAAM4C,EACX8B,KAAKzE,aAAe,GACpByE,KAAKxE,YAAc,GACnBwE,KAAKzD,MAAQA,EACbyD,KAAK5D,SAAW,IC6FT6D,MA1FFA,KACX,IAAIjF,EAAUkF,iBAAO,IACrB,MAAO1B,EAAS2B,GAAcC,mBAAS,KAChClD,EAAeyB,GAAoByB,mBAAS,OAC5CpD,EAAiBqD,GAAsBD,mBAAS,MAGvDE,oBAAU,OACP,CAAC9B,EAAStB,EAAeF,IAE5B,MAkCMuD,EAAgBA,KACpB,IAAIpF,EAAS,GACb,MAAMC,EAAOC,IAEX,GADAF,EAAOqF,KAAKnF,GACRL,EAAQE,QAAQG,IAAWL,EAAQE,QAAQG,GAAQe,SACrD,IAAK,MAAMC,KAASrB,EAAQE,QAAQG,GAAQe,SAAUhB,EAAIiB,IAG9D,IAAI,IAAIC,EAAE,EAAGA,EAAEtB,EAAQE,QAAQe,OAAQK,IACN,GAA5BtB,EAAQE,QAAQoB,GAAGC,OAAYnB,EAAIkB,GAExC6D,EAAWhF,IAGb,OACEqB,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAC3B,EAAS,CACRE,QAASA,IAEXwB,IAAAC,cAAA,OAAKC,UAAU,YACbF,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACM,EAAgB,CACfC,gBAAiBA,EACjBC,qBApDmBA,CAACY,EAAOkB,EAAMhD,KACzCf,EAAQE,QAAQ2C,GAAOtC,aAAawD,GAAMhD,EAC1CsE,EAAmBI,KAAKC,MAAMD,KAAKE,UAAU3F,EAAQE,QAAQ2C,OAmDrDX,cAAeA,KAEnBV,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAC6C,EAAe,CACdtC,gBAAiBA,EACjBuC,oBArDkBA,CAAC1B,EAAOkB,EAAMhD,KACxCf,EAAQE,QAAQ2C,GAAOrC,YAAYuD,GAAMhD,EACzCsE,EAAmBI,KAAKC,MAAMD,KAAKE,UAAU3F,EAAQE,QAAQ2C,OAoDrDX,cAAeA,KAEnBV,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAC8B,EAAW,CACVvD,QAASA,EACTwD,QAASA,EACTC,WAvDSmC,CAAC1C,EAASL,MACb,IAAXA,EACD7C,EAAQE,QAAQsF,KAAK,IAAIV,EAAQ5B,EAAS,KAE1ClD,EAAQE,QAAQ2C,GAAOzB,SAASoE,KAAKxF,EAAQE,QAAQe,QACrDjB,EAAQE,QAAQsF,KAAK,IAAIV,EAAQ5B,EAASlD,EAAQE,QAAQ2C,GAAOtB,MAAM,KAEzEgE,KAiDQ7B,cA9CamC,IAClBA,IAAgB3D,IACjBmD,EAAmB,MACnB1B,EAAiB,OAEnB3D,EAAQE,QAAQ4F,OAAOD,EAAe,GACtCN,KAyCQrD,cAAeA,EACfyB,iBAzEkBd,IAC1Bc,EAAiBd,GACjBwC,EAAmBrF,EAAQE,QAAQ2C,SA0EjCrB,IAAAC,cAAA,UAAQC,UAAU,mB,MC5ETqE,MAdf,WACE,OACEvE,IAAAC,cAACuE,IAAa,CAACC,SAAUC,mBACvB1E,IAAAC,cAAC0E,IAAM,KACH3E,IAAAC,cAAC2E,IAAK,CACJC,OAAK,EACLC,KAAK,IACLC,OAAQA,IAAM/E,IAAAC,cAACwD,EAAI,WCAhBuB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK5G,IAAkD,IAAjD,OAAE6G,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASjH,EACpE6G,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDb,OACH/E,IAAAC,cAACD,IAAM6F,WAAU,KACf7F,IAAAC,cAACsE,EAAG,QAORS,M","file":"static/js/main.8faa98a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ResultBox = ({ tagData }) => {\r\n  const getResult = () => {\r\n    if (tagData.current == null) return null;\r\n\r\n    // 결과를 저장할 변수\r\n    let result = '';\r\n\r\n    const DFS = (target) => {\r\n      const tag = tagData.current[target].tag;\r\n      const htmlProperty = tagData.current[target].htmlProperty;\r\n      const cssProperty = tagData.current[target].cssProperty;\r\n      // 각 태그와 속성에 맞게 HTML 코드 추가\r\n      result += `<${tag}`;\r\n      // HTML 속성 추가\r\n      Object.entries(htmlProperty).forEach(([key, value]) => {\r\n        if(key!=\"content\") result += ` ${key}=\"${value}\"`;\r\n      });\r\n      // CSS 속성 추가\r\n      if(!(Object.keys(cssProperty).length===0)) { \r\n        result += ` style=\"`;\r\n        Object.entries(cssProperty).forEach(([key, value]) => {\r\n          if(value) result += `${key}:${value};`;\r\n        });\r\n        result += `\">${(htmlProperty.content)?htmlProperty.content:''}`;\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        result += `</${tag}>`; // 태그 닫기\r\n      } else {\r\n        result += `>${(htmlProperty.content)?htmlProperty.content:''}`\r\n          if (tagData.current[target] && tagData.current[target].children) {\r\n            for (const child of tagData.current[target].children) DFS(child);\r\n          }\r\n        result += `</${tag}>`; // 태그 닫기\r\n      }\r\n    }\r\n    for(let i=0; i<tagData.current.length; i++) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{ marginTop: 20 }}>\r\n      <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: getResult() }} />\r\n      <div className=\"card-footer text-body-secondary\">\r\n        {getResult()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultBox;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst HTMLPropertyList = ({ selectedElement, updateHTMLProperties, selectedIndex }) => {\r\n  const getData = (property) => {\r\n    if (selectedIndex == null) return null;\r\n    if (selectedElement == null) return null;\r\n    if (!(\"htmlProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.htmlProperty) return selectedElement.htmlProperty[property];\r\n    return null;\r\n  }\r\n\r\n  const getpropertys = (selectedElement) => {\r\n    if (selectedElement == null) return [];\r\n    switch (selectedElement.tag) {\r\n      case 'a': return [\"href\", \"target\"];\r\n      default: return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20 }}>\r\n      <div className=\"card-header\" id={selectedIndex}>\r\n        <b>HTML PROPERTY</b>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item list-group-item-secondary\" key=\"-1\">\r\n          <input\r\n            className=\"form-control form-control-sm\"\r\n            disabled={(selectedElement)?false:true}\r\n            placeholder=\"content\"\r\n            onChange={(event) => updateHTMLProperties(selectedIndex, \"content\", event.target.value )}\r\n            value={getData(\"content\") || ''}\r\n          />\r\n        </li>\r\n        {getpropertys(selectedElement).map((property, index) => (\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n            {property}:\r\n            <input\r\n              className=\"form-control form-control-sm\"\r\n              disabled={(selectedElement)?false:true}\r\n              style={{ marginLeft: 10 }}\r\n              onChange={(event) => updateHTMLProperties(selectedIndex, { [property]: event.target.value })}\r\n              value={getData(property) || ''}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nexport default HTMLPropertyList;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectTagList = ({ onTagSelect }) => {\r\n  const handleTagClick = (tagType) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(tagType);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {TagType.map((tagType, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(tagType)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {tagType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectTagList;\r\n\r\nconst TagType = [\r\n    \"div\", \"section\", \"article\", \"nav\", \"span\", \"p\", \"a\", \"br\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\nimport SelectTagList from './SelectTagList';\r\nimport { Block } from '@mui/icons-material';\r\n\r\nconst ElementList = ({ tagData, tagList, AddTagData, removeTagData, selectedIndex, setSelectedIndex }) => {\r\n\r\n  const handleTagDataSelect = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleTagAdd = (tagType) => {\r\n    AddTagData(tagType, -1);\r\n  }\r\n\r\n  const handleSubTagAdd = (tagType) => {\r\n    AddTagData(tagType, selectedIndex);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\"style={{ height: '280px', marginTop: 20}}>\r\n      <div className=\"card-header\">\r\n        <b>ELEMENT</b>\r\n      </div>\r\n      <div className='card-body overflow-auto' style={{padding:0}}>\r\n      <div className=\"card-group list-group list-group-flush overflow-auto\">\r\n        {tagList.map((item) => (\r\n          <button\r\n            className={`list-group-item list-group-item-action d-flex justify-content-between align-items-center ${selectedIndex === item ? 'active' : ''}`}\r\n            key={item}\r\n            onClick={() => handleTagDataSelect(item)}\r\n          >\r\n            {\"└\".repeat(tagData.current[item].depth)} {tagData.current[item].tag}\r\n            <div\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => removeTagData(item)}\r\n            >\r\n            </div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      </div>\r\n      <div className=\"card-footer\" style={{padding:0}}>\r\n        <div className=\"btn-group\" role=\"group\" style={{width:'100%'}}> \r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addTag\"\r\n            style={{ width: '100%', padding:10}}\r\n          >\r\n            Add Tag\r\n          </button>\r\n          <button\r\n            className=\"list-group-item btn btn-secondary\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addSubTag\"\r\n            style={{ width: '100%', padding:10}}\r\n            disabled={selectedIndex===null}\r\n          >\r\n            Add Sub Tag\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"modal fade\"\r\n          id=\"addTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addSubTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleSubTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ElementList;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CSSPropertyList = ({ selectedElement, updateCSSProperties, selectedIndex}) => {\r\n  const getData = (property) => {\r\n\t\tif (selectedIndex == null) return null;\r\n\t\tif (selectedElement == null) return null;\r\n    if (!(\"cssProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.cssProperty) return selectedElement.cssProperty[property];\r\n\t\treturn null;\r\n\t}\r\n\r\n  const getInputClassName = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"form-control form-control-color\";\r\n      default: return \"form-control form-control-sm\";\r\n    }\r\n  }\r\n\r\n  const getInputType = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"color\";\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  const getOptions = (property) => {\r\n    switch (property) {\r\n      case \"display\": return [null, \"none\", \"block\", \"inline\", \"inline-block\"];\r\n      case \"text-align\": return [null, \"left\", \"right\", \"center\", \"justify\"];\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20}}>\r\n      <div className=\"card-header\">\r\n        <b>CSS PROPERTY</b>\r\n      </div>\r\n      <div className=\"list-group list-group-flush overflow-auto\">\r\n        {defaultProperties.map((property, index) => (\r\n          <li \r\n            className=\"list-group-item d-flex justify-content-between align-items-center\" \r\n            key={index} \r\n            style={{ whiteSpace: 'nowrap' }}>\r\n            {property}:\r\n            {(getOptions(property)) ? (\r\n              <select\r\n                className= \"form-select form-select-sm\"\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, property, event.target.value )}\r\n                value={getData(property) || ''}\r\n              >\r\n                {getOptions(property).map((option, index) => (\r\n                  <option value={option} key={index}>{option}</option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <input\r\n                className={getInputClassName(property)}\r\n                type={getInputType(property)}\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, property, event.target.value )}\r\n                value={getData(property) || ''}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CSSPropertyList;\r\n\r\nconst defaultProperties = [\"color\", \"font-size\", \"font-family\", \"margin\", \"padding\", \"border\", \"background-color\", \"text-align\", \"display\", \"width\", \"height\"]\r\nconst properties = [\"position\", \"float\", \"clear\", \"border-radius\", \"box-shadow\", \"transition\", \"flex\"]\r\n// const propertys = [\"font-size\", \"font-weight\", \"color\", \"letter-spacing\", \"display\", \"border\"];","export default class TagData {\r\n    constructor(tagType, depth) {\r\n        this.tag = tagType;\r\n        this.htmlProperty = {};\r\n        this.cssProperty = {};\r\n        this.depth = depth;\r\n        this.children = [];\r\n    }\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ResultBox from './components/ResultBox';\r\nimport HTMLPropertyList from './components/HTMLPropertyList';\r\nimport ElementList from './components/ElementList';\r\nimport CSSPropertyList from './components/CSSPropertyList';\r\nimport TagData from './dto/TagData';\r\n\r\nconst Main = () => {\r\n  let tagData = useRef([]);\r\n  const [tagList, setTagList] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n  }, [tagList, selectedIndex, selectedElement]);\r\n\r\n  const updateSeletedIndex = (index) => {\r\n    setSelectedIndex(index);\r\n    setSelectedElement(tagData.current[index]);\r\n  }\r\n\r\n  const updateHTMLProperties = (index, type, value) => {\r\n    tagData.current[index].htmlProperty[type]=value;\r\n    setSelectedElement(JSON.parse(JSON.stringify(tagData.current[index])));\r\n  };\r\n  \r\n  const updateCSSProperties = (index, type, value) => {\r\n    tagData.current[index].cssProperty[type]=value;\r\n    setSelectedElement(JSON.parse(JSON.stringify(tagData.current[index])));\r\n  };\r\n\r\n  const addTagData = (tagType, index) => {\r\n    if(index === -1) {\r\n      tagData.current.push(new TagData(tagType, 0));\r\n    } else {\r\n      tagData.current[index].children.push(tagData.current.length);\r\n      tagData.current.push(new TagData(tagType, tagData.current[index].depth+1));\r\n    }\r\n    updateTagList();\r\n  }\r\n\r\n  const removeTagData = (indexToRemove) => {\r\n    if(indexToRemove===selectedIndex){\r\n      setSelectedElement(null);\r\n      setSelectedIndex(null);\r\n    }\r\n    tagData.current.splice(indexToRemove, 1);\r\n    updateTagList();\r\n  };\r\n\r\n  const updateTagList = () => {\r\n    let result = [];\r\n    const DFS = (target) => {\r\n      result.push(target)\r\n      if (tagData.current[target] && tagData.current[target].children) {\r\n        for (const child of tagData.current[target].children) DFS(child);\r\n      }\r\n    }\r\n    for(let i=0; i<tagData.current.length; i++) {\r\n      if(tagData.current[i].depth == 0) DFS(i);\r\n    }\r\n    setTagList(result);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ResultBox \r\n        tagData={tagData}\r\n      />\r\n      <div className=\"row h-50\">\r\n        <div className=\"col\">\r\n          <HTMLPropertyList\r\n            selectedElement={selectedElement}\r\n            updateHTMLProperties={updateHTMLProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <CSSPropertyList\r\n            selectedElement={selectedElement}\r\n            updateCSSProperties={updateCSSProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <ElementList\r\n            tagData={tagData}\r\n            tagList={tagList}\r\n            AddTagData={addTagData}\r\n            removeTagData={removeTagData}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={updateSeletedIndex} />\r\n        </div>\r\n      </div>\r\n      <footer className=\"py-3 mt-auto\"></footer>\r\n    </div>\r\n  )\r\n}\r\nexport default Main;","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Main />}\n          />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}