{"version":3,"sources":["components/ResultBox.js","components/HTMLPropertyList.js","components/SelectTagList.js","components/ElementList.js","components/CSSPropertyList.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["ResultBox","React","createElement","className","style","marginTop","marginBottom","HTMLPropertyList","_ref","selectedElement","updateHTMLProperties","selectedIndex","getData","property","htmlProperty","id","key","placeholder","onChange","event","target","value","propertys","map","index","marginLeft","SelectTagList","onTagSelect","TagType","tagType","onClick","handleTagClick","data-bs-dismiss","aria-label","ElementList","tagData","AddTagData","removeTagData","setSelectedIndex","item","concat","handleTagDataSelect","tag","type","data-bs-toggle","data-bs-target","tabIndex","aria-hidden","CSSPropertyList","updateCSSProperties","whiteSpace","Main","setTagData","useState","setSelectedElement","useEffect","console","log","newHtmlProperty","prevTagData","length","updatedTagData","newCssProperty","cssProperty","indexToRemove","filter","_","App","BrowserRouter","basename","process","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.790e8799.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ResultBox = () => {\r\n  return (\r\n    <div className=\"card\" style={{ marginTop: 20, marginBottom: 20 }}>\r\n      <div className=\"card-body\">결과창</div>\r\n    </div>\r\n  )\r\n}\r\nexport default ResultBox;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst HTMLPropertyList = ({ selectedElement, updateHTMLProperties, selectedIndex }) => {\r\n\tconst getData = (property) => {\r\n\t\tif (selectedIndex == null) return null;\r\n\t\tif (selectedElement == null) return null;\r\n    if (!(\"htmlProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.htmlProperty) return selectedElement.htmlProperty[property];\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card-header\" id={selectedIndex}>\r\n\t\t\t\t<b>HTML PROPERTY</b>\r\n\t\t\t</div>\r\n\t\t\t<ul className=\"list-group list-group-flush\">\r\n\t\t\t\t<li className=\"list-group-item list-group-item-secondary\" key=\"-1\">\r\n\t\t\t\t\t<input\r\n            className=\"form-control form-control-sm\" \r\n            placeholder=\"content\"\r\n            onChange={(event) => updateHTMLProperties(selectedIndex, { [\"content\"]: event.target.value })}\r\n            value={getData(\"content\") || ''}\r\n          />\r\n\t\t\t\t</li>\r\n\t\t\t\t{propertys.map((property, index) => (\r\n\t\t\t\t\t<li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n\t\t\t\t\t\t{property}:\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"form-control form-control-sm\"\r\n\t\t\t\t\t\t\tstyle={{ marginLeft: 10 }}\r\n\t\t\t\t\t\t\tonChange={(event) => updateHTMLProperties(selectedIndex, { [property]: event.target.value })}\r\n\t\t\t\t\t\t\tvalue={getData(property) || ''}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default HTMLPropertyList;\r\n\r\nconst propertys = [\"href\", \"target\"];","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectTagList = ({ onTagSelect }) => {\r\n  const handleTagClick = (tagType) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(tagType);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {TagType.map((tagType, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(tagType)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {tagType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectTagList;\r\n\r\nconst TagType = [\r\n    \"div\", \"section\", \"article\", \"nav\", \"a\", \"br\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\nimport SelectTagList from './SelectTagList';\r\n\r\nconst ElementList = ({ tagData, AddTagData, removeTagData, selectedIndex, setSelectedIndex }) => {\r\n\r\n  const handleTagDataSelect = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleTagAdd = (tagType) => {\r\n    AddTagData(tagType);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <b>ELEMENT</b>\r\n      </div>\r\n      <div className=\"list-group list-group-flush\">\r\n        {tagData.map((item, index) => (\r\n          <button\r\n            className={`list-group-item list-group-item-action d-flex justify-content-between align-items-center ${selectedIndex === index ? 'active' : ''}`}\r\n            key={index}\r\n            onClick={() => handleTagDataSelect(index)}\r\n          >\r\n            {item.tag}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => removeTagData(index)}>\r\n            </button>\r\n          </button>\r\n        ))}\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#addTag\">\r\n          Add Tag\r\n        </button>\r\n\r\n        <div className=\"modal fade\"\r\n          id=\"addTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ElementList;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CSSPropertyList = ({ tagData, updateCSSProperties }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <b>CSS PROPERTY</b>\r\n      </div>\r\n      <div className=\"list-group list-group-flush\">\r\n        {propertys.map((property, index) => (\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index} style={{ whiteSpace: 'nowrap' }}>\r\n            {property}:\r\n            <input\r\n              className=\"form-control form-control-sm\"\r\n              style={{ marginLeft: 10 }}>\r\n            </input>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default CSSPropertyList;\r\n\r\nconst propertys = [\"font-size\", \"font-weight\", \"color\", \"letter-spacing\", \"display\", \"border\"];","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ResultBox from './components/ResultBox';\r\nimport HTMLPropertyList from './components/HTMLPropertyList';\r\nimport ElementList from './components/ElementList';\r\nimport CSSPropertyList from './components/CSSPropertyList';\r\n\r\nconst Main = () => {\r\n  const [tagData, setTagData] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    // Fetch the selectedElement using selectedIndex\r\n    const selectedElement = tagData[selectedIndex];\r\n    // Handle the selectedElement as needed (e.g., updating HTML properties)\r\n    console.log('Selected Element:', selectedElement);\r\n  }, [selectedIndex, tagData]);\r\n\r\n  const updateSeletedIndex = (index) => {\r\n    setSelectedIndex(index);\r\n    setSelectedElement(tagData[index]);\r\n  }\r\n\r\n  const updateHTMLProperties = (index, newHtmlProperty) => {\r\n    setTagData((prevTagData) => {\r\n      if (index >= 0 && index < prevTagData.length) {\r\n        const updatedTagData = [...prevTagData];\r\n        updatedTagData[index] = {\r\n          ...updatedTagData[index],\r\n          htmlProperty: {\r\n            ...updatedTagData[index].htmlProperty,\r\n            ...newHtmlProperty,\r\n          },\r\n        };\r\n        setTagData(updatedTagData);\r\n        setSelectedElement(updatedTagData[index]);\r\n      }\r\n      return prevTagData;\r\n    });\r\n  };\r\n  \r\n  const updateCSSProperties = (index, newCssProperty) => {\r\n    setTagData((prevTagData) => {\r\n      const updatedTagData = [...prevTagData];\r\n      // Ensure the index is valid\r\n      if (index >= 0 && index < updatedTagData.length) {\r\n        updatedTagData[index] = {\r\n          ...updatedTagData[index],\r\n          cssProperty: {\r\n            ...updatedTagData[index].cssProperty,\r\n            ...newCssProperty,\r\n          },\r\n        };\r\n      }\r\n      return updatedTagData;\r\n    });\r\n  };\r\n  const addTagData = (tagType) => {\r\n    setTagData([...tagData, { tag: tagType, htmlProperty: {}, cssProperty: {} }]);\r\n  }\r\n  const removeTagData = (indexToRemove) => {\r\n    const updatedTagData = tagData.filter((_, index) => index !== indexToRemove);\r\n    setTagData(updatedTagData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ResultBox />\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <HTMLPropertyList\r\n            selectedElement={selectedElement}\r\n            updateHTMLProperties={updateHTMLProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <CSSPropertyList\r\n            tagData={tagData}\r\n            updateCSSProperties={updateCSSProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <ElementList\r\n            tagData={tagData}\r\n            AddTagData={addTagData}\r\n            removeTagData={removeTagData}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={updateSeletedIndex} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Main;","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Main />}\n          />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}