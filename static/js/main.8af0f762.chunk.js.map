{"version":3,"sources":["components/ResultBox.js","components/HTMLPropertyList.js","components/SelectTagList.js","components/ElementList.js","components/CSSPropertyList.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["ResultBox","_ref","tagData","getResult","result","forEach","_ref2","tag","htmlProperty","cssProperty","concat","Object","entries","_ref3","key","value","keys","length","_ref4","content","React","createElement","className","style","marginTop","dangerouslySetInnerHTML","__html","HTMLPropertyList","selectedElement","updateHTMLProperties","selectedIndex","getData","property","height","id","disabled","placeholder","onChange","event","target","getpropertys","map","index","marginLeft","SelectTagList","onTagSelect","TagType","tagType","onClick","handleTagClick","data-bs-dismiss","aria-label","ElementList","AddTagData","removeTagData","setSelectedIndex","padding","item","handleTagDataSelect","type","data-bs-toggle","data-bs-target","width","tabIndex","aria-hidden","CSSPropertyList","updateCSSProperties","getInputClassName","getInputType","getOptions","properties","whiteSpace","option","Main","setTagData","useState","setSelectedElement","useEffect","newHtmlProperty","prevTagData","updatedTagData","newCssProperty","indexToRemove","filter","_","App","BrowserRouter","basename","process","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.8af0f762.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ResultBox = ({ tagData }) => {\r\n  const getResult = () => {\r\n    if (tagData == null) return null;\r\n\r\n    // 결과를 저장할 변수\r\n    let result = '';\r\n\r\n    // tagData를 순회하며 HTML 문자열 생성\r\n    tagData.forEach(({ tag, htmlProperty, cssProperty }) => {\r\n      // 각 태그와 속성에 맞게 HTML 코드 추가\r\n      result += `<${tag}`;\r\n      // HTML 속성 추가\r\n      Object.entries(htmlProperty).forEach(([key, value]) => {\r\n        if(key!=\"content\") result += ` ${key}=\"${value}\"`;\r\n      });\r\n      // CSS 속성 추가\r\n      if(!(Object.keys(cssProperty).length===0)) { \r\n        result += ` style=\"`;\r\n        Object.entries(cssProperty).forEach(([key, value]) => {\r\n          if(value) result += `${key}:${value};`;\r\n        });\r\n        result += `\">${(htmlProperty.content)?htmlProperty.content:''}</${tag}>\\n`; // 태그 닫기\r\n      } else {\r\n        result += `>${(htmlProperty.content)?htmlProperty.content:''}</${tag}>\\n`; // 태그 닫기\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{ marginTop: 20 }}>\r\n      <div className=\"card-body\" dangerouslySetInnerHTML={{ __html: getResult() }} />\r\n      <div className=\"card-footer text-body-secondary\">\r\n        {getResult()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultBox;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst HTMLPropertyList = ({ selectedElement, updateHTMLProperties, selectedIndex }) => {\r\n  const getData = (property) => {\r\n    if (selectedIndex == null) return null;\r\n    if (selectedElement == null) return null;\r\n    if (!(\"htmlProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.htmlProperty) return selectedElement.htmlProperty[property];\r\n    return null;\r\n  }\r\n\r\n  const getpropertys = (selectedElement) => {\r\n    if (selectedElement == null) return [];\r\n    switch (selectedElement.tag) {\r\n      case 'a': return [\"href\", \"target\"];\r\n      default: return [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20 }}>\r\n      <div className=\"card-header\" id={selectedIndex}>\r\n        <b>HTML PROPERTY</b>\r\n      </div>\r\n      <ul className=\"list-group list-group-flush\">\r\n        <li className=\"list-group-item list-group-item-secondary\" key=\"-1\">\r\n          <input\r\n            className=\"form-control form-control-sm\"\r\n            disabled={(selectedElement)?false:true}\r\n            placeholder=\"content\"\r\n            onChange={(event) => updateHTMLProperties(selectedIndex, { [\"content\"]: event.target.value })}\r\n            value={getData(\"content\") || ''}\r\n          />\r\n        </li>\r\n        {getpropertys(selectedElement).map((property, index) => (\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index}>\r\n            {property}:\r\n            <input\r\n              className=\"form-control form-control-sm\"\r\n              disabled={(selectedElement)?false:true}\r\n              style={{ marginLeft: 10 }}\r\n              onChange={(event) => updateHTMLProperties(selectedIndex, { [property]: event.target.value })}\r\n              value={getData(property) || ''}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nexport default HTMLPropertyList;","import React, { useState } from 'react';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst SelectTagList = ({ onTagSelect }) => {\r\n  const handleTagClick = (tagType) => {\r\n    // 클릭한 태그를 부모 컴포넌트에 전달\r\n    onTagSelect(tagType);\r\n  };\r\n\r\n    return (\r\n      <div className=\"list-group\">\r\n        {TagType.map((tagType, index) => (\r\n          <button \r\n            className=\"list-group-item list-group-item-action\" \r\n            key={index}\r\n            onClick={() => handleTagClick(tagType)}\r\n            data-bs-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n          >\r\n            {tagType}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nexport default SelectTagList;\r\n\r\nconst TagType = [\r\n    \"div\", \"section\", \"article\", \"nav\", \"a\", \"br\"\r\n]","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\nimport SelectTagList from './SelectTagList';\r\nimport { Block } from '@mui/icons-material';\r\n\r\nconst ElementList = ({ tagData, AddTagData, removeTagData, selectedIndex, setSelectedIndex }) => {\r\n\r\n  const handleTagDataSelect = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const handleTagAdd = (tagType) => {\r\n    AddTagData(tagType);\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\"style={{ height: '280px', marginTop: 20}}>\r\n      <div className=\"card-header\">\r\n        <b>ELEMENT</b>\r\n      </div>\r\n      <div className='card-body overflow-auto' style={{padding:0}}>\r\n      <div className=\"card-group list-group list-group-flush overflow-auto\">\r\n        {tagData.map((item, index) => (\r\n          <button\r\n            className={`list-group-item list-group-item-action d-flex justify-content-between align-items-center ${selectedIndex === index ? 'active' : ''}`}\r\n            key={index}\r\n            onClick={() => handleTagDataSelect(index)}\r\n          >\r\n            {item.tag}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              aria-label=\"Close\"\r\n              onClick={() => removeTagData(index)}\r\n            >\r\n            </button>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      </div>\r\n      <div className=\"card-footer\" style={{padding:0}}>\r\n          <button\r\n            className=\"list-group-item\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addTag\"\r\n            style={{ width: '100%', padding:10}}\r\n          >\r\n            Add Tag\r\n          </button>\r\n\r\n        \r\n        <div className=\"modal fade\"\r\n          id=\"addTag\"\r\n          tabIndex=\"-1\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h1 className=\"modal-title fs-5\" id=\"exampleModalLabel\">Select Tag</h1>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <SelectTagList onTagSelect={handleTagAdd} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ElementList;","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CSSPropertyList = ({ selectedElement, updateCSSProperties, selectedIndex}) => {\r\n  const getData = (property) => {\r\n\t\tif (selectedIndex == null) return null;\r\n\t\tif (selectedElement == null) return null;\r\n    if (!(\"cssProperty\" in selectedElement)) return null;\r\n    if (property in selectedElement.cssProperty) return selectedElement.cssProperty[property];\r\n\t\treturn null;\r\n\t}\r\n\r\n  const getInputClassName = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"form-control form-control-color\";\r\n      default: return \"form-control form-control-sm\";\r\n    }\r\n  }\r\n\r\n  const getInputType = (property) => {\r\n    switch (property) {\r\n      case \"color\": case \"background-color\": return \"color\";\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  const getOptions = (property) => {\r\n    switch (property) {\r\n      case \"display\": return [null, \"none\", \"block\", \"inline\", \"inline-block\"];\r\n      case \"text-align\": return [null, \"left\", \"right\", \"center\", \"justify\"];\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{ height: '280px', marginTop: 20}}>\r\n      <div className=\"card-header\">\r\n        <b>CSS PROPERTY</b>\r\n      </div>\r\n      <div className=\"list-group list-group-flush overflow-auto\">\r\n        {properties.map((property, index) => (\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={index} style={{ whiteSpace: 'nowrap' }}>\r\n            {property}:\r\n            {(getOptions(property)) ? (\r\n              <select\r\n                className= \"form-select form-select-sm\"\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, { [property]: event.target.value })}\r\n                value={getData(property) || ''}\r\n              >\r\n                {getOptions(property).map((option, index) => (\r\n                  <option value={option} key={index}>{option}</option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <input\r\n                className={getInputClassName(property)}\r\n                type={getInputType(property)}\r\n                disabled={!selectedElement}\r\n                style={{ marginLeft: 10 }}\r\n                onChange={(event) => updateCSSProperties(selectedIndex, { [property]: event.target.value })}\r\n                value={getData(property) || ''}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CSSPropertyList;\r\n\r\nconst properties = [\"color\", \"font-size\", \"font-family\", \"margin\", \"padding\", \"border\", \"background-color\", \"text-align\", \"display\", \"width\", \"height\"]\r\n// const propertys = [\"font-size\", \"font-weight\", \"color\", \"letter-spacing\", \"display\", \"border\"];","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ResultBox from './components/ResultBox';\r\nimport HTMLPropertyList from './components/HTMLPropertyList';\r\nimport ElementList from './components/ElementList';\r\nimport CSSPropertyList from './components/CSSPropertyList';\r\n\r\nconst Main = () => {\r\n  const [tagData, setTagData] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    // Fetch the selectedElement using selectedIndex\r\n    const selectedElement = tagData[selectedIndex];\r\n    // Handle the selectedElement as needed (e.g., updating HTML properties)\r\n  }, [selectedIndex, tagData]);\r\n\r\n  const updateSeletedIndex = (index) => {\r\n    setSelectedIndex(index);\r\n    setSelectedElement(tagData[index]);\r\n  }\r\n\r\n  const updateHTMLProperties = (index, newHtmlProperty) => {\r\n    setTagData((prevTagData) => {\r\n      if (index >= 0 && index < prevTagData.length) {\r\n        const updatedTagData = [...prevTagData];\r\n        updatedTagData[index] = {\r\n          ...updatedTagData[index],\r\n          htmlProperty: {\r\n            ...updatedTagData[index].htmlProperty,\r\n            ...newHtmlProperty,\r\n          },\r\n        };\r\n        setTagData(updatedTagData);\r\n        setSelectedElement(updatedTagData[index]);\r\n      }\r\n      return prevTagData;\r\n    });\r\n  };\r\n  \r\n  const updateCSSProperties = (index, newCssProperty) => {\r\n    setTagData((prevTagData) => {\r\n      if (index >= 0 && index < prevTagData.length) {\r\n        const updatedTagData = [...prevTagData];\r\n        updatedTagData[index] = {\r\n          ...updatedTagData[index],\r\n          cssProperty: {\r\n            ...updatedTagData[index].cssProperty,\r\n            ...newCssProperty,\r\n          },\r\n        };\r\n        setTagData(updatedTagData);\r\n        setSelectedElement(updatedTagData[index]);\r\n      }\r\n      return prevTagData;\r\n    });\r\n  };\r\n  const addTagData = (tagType) => {\r\n    setTagData([...tagData, { tag: tagType, htmlProperty: {}, cssProperty: {} }]);\r\n  }\r\n  const removeTagData = (indexToRemove) => {\r\n    debugger;\r\n    if(indexToRemove===selectedIndex){\r\n      setSelectedElement(null);\r\n      setSelectedIndex(null);\r\n    }\r\n    const updatedTagData = tagData.filter((_, index) => index !== indexToRemove);\r\n    setTagData(updatedTagData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ResultBox \r\n        tagData={tagData}\r\n      />\r\n      <div className=\"row h-50\">\r\n        <div className=\"col\">\r\n          <HTMLPropertyList\r\n            selectedElement={selectedElement}\r\n            updateHTMLProperties={updateHTMLProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <CSSPropertyList\r\n            selectedElement={selectedElement}\r\n            updateCSSProperties={updateCSSProperties}\r\n            selectedIndex={selectedIndex} />\r\n        </div>\r\n        <div className=\"col\">\r\n          <ElementList\r\n            tagData={tagData}\r\n            AddTagData={addTagData}\r\n            removeTagData={removeTagData}\r\n            selectedIndex={selectedIndex}\r\n            setSelectedIndex={updateSeletedIndex} />\r\n        </div>\r\n      </div>\r\n      <footer className=\"py-3 mt-auto\"></footer>\r\n    </div>\r\n  )\r\n}\r\nexport default Main;","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Main from './Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Main />}\n          />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}